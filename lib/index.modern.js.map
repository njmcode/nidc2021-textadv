{"version":3,"file":"index.modern.js","sources":["../src/utils.js","../src/commands.js","../src/messages.js","../src/ui.js","../src/tags.js","../src/helpers.js","../src/index.js","../src/entities.js","../src/queue.js","../src/parse.js"],"sourcesContent":["/* eslint-disable no-param-reassign */\r\n/* eslint-disable import/prefer-default-export */\r\n\r\n// Returns arr with any and all exclArray items removed\r\nexport const arrayExclude = (arr, exclArray) => arr.filter((i) => !exclArray.includes(i));\r\n\r\n// Retunrs an object with arr values as keys, and return value\r\n// of assignmentCallback as values (takes (obj, key) as args)\r\n// e.g.\r\n// arrayToObject(\r\n//   ['foo', 'bar'],\r\n//   (_obj, k) => `shazam_${k}`\r\n// )\r\n// -> { 'foo': 'shazam_foo', 'bar': 'shazam_bar' }\r\nexport const arrayToObject = (arr, assignmentCallback) => arr.reduce((obj, k) => {\r\n  obj[k] = assignmentCallback(obj, k);\r\n  return obj;\r\n}, {});\r\n","/* eslint-disable no-param-reassign */\r\nimport nlp from 'compromise';\r\nimport { arrayToObject } from './utils';\r\n\r\nconst COMMANDS = {\r\n  n: 'n',\r\n  e: 'e',\r\n  w: 'w',\r\n  s: 's',\r\n  up: 'up',\r\n  down: 'down',\r\n  in: 'in',\r\n  out: 'out',\r\n  look: 'look',\r\n  examine: 'examine',\r\n  get: 'get',\r\n  drop: 'drop',\r\n  inventory: 'inventory',\r\n  help: 'help'\r\n};\r\n\r\nexport const ALIASES = {\r\n  [COMMANDS.n]: ['north', 'go north'],\r\n  [COMMANDS.e]: ['east', 'go east'],\r\n  [COMMANDS.w]: ['west', 'go west'],\r\n  [COMMANDS.s]: ['south', 'go south'],\r\n  [COMMANDS.up]: ['u', 'go up', 'ascend'],\r\n  [COMMANDS.down]: ['d', 'go down', 'descend'],\r\n  [COMMANDS.in]: ['enter', 'go in', 'get in'],\r\n  [COMMANDS.out]: ['leave', 'go out', 'get out', 'exit'],\r\n  [COMMANDS.look]: ['look around', 'where', 'where am i', 'whereami'],\r\n  [COMMANDS.examine]: ['look at', 'inspect', 'x', 'ex', 'search', 'check'],\r\n  [COMMANDS.get]: ['g', 'take', 'pick up', 'obtain', 'acquire', 'grab'],\r\n  [COMMANDS.drop]: ['put down', 'toss', 'remove', 'discard'],\r\n  [COMMANDS.inventory]: [\r\n    'inv',\r\n    'carrying',\r\n    'equipment',\r\n    'items',\r\n    'gear'\r\n  ],\r\n  [COMMANDS.help]: [\r\n    'instructions',\r\n    'howto',\r\n    'how to play',\r\n    '?',\r\n    'commands',\r\n    'verbs',\r\n    'words',\r\n    'controls'\r\n  ]\r\n};\r\n\r\nconst setupCommands = (config) => {\r\n  const commands = { ...COMMANDS };\r\n  const aliases = { ...ALIASES };\r\n\r\n  // Add custom commands and aliases to our lists\r\n  if (config.commands) {\r\n    Object.entries(config.commands).forEach(([cmd, aliasList]) => {\r\n      commands[cmd] = cmd;\r\n      aliases[cmd] = aliasList;\r\n    });\r\n  }\r\n\r\n  // For every command alias, create a map entry\r\n  // pointing to the base command for that alias\r\n  // (e.g. { 'get':'get', 'take':'get', 'pick up':'get' })\r\n  const baseCommandMap = arrayToObject(\r\n    Object.keys(aliases),\r\n    (obj, k) => {\r\n      aliases[k].forEach((alias) => { obj[alias] = k; });\r\n      return k;\r\n    }\r\n  );\r\n\r\n  // Let compromise know about our new commands\r\n  nlp.extend((_Doc, world) => {\r\n    // TODO: fix collisions with existing verbs that are\r\n    // defined as something else (e.g. 'me')\r\n    // world.words = {};\r\n\r\n    const ext = arrayToObject(\r\n      Object.keys(baseCommandMap),\r\n      () => 'Verb'\r\n    );\r\n    world.addWords(ext);\r\n  });\r\n\r\n  return {\r\n    commands, aliases, baseCommandMap, nlp\r\n  };\r\n};\r\n\r\nexport default setupCommands;\r\n","export default {\r\n  LOCATION_ITEMS_PREFIX: 'You can see ',\r\n  INV_PREFIX: 'You are carrying ',\r\n  INV_NONE: 'You are carrying nothing.',\r\n  FAIL_UNKNOWN: 'Sorry, I don\\'t understand.',\r\n  FAIL_UNHANDLED: 'Sorry, I can\\'t do that.',\r\n  FAIL_NO_EXIT: 'You can\\'t go that way.',\r\n  FAIL_EXAMINE: 'Sorry, I can\\'t see that.',\r\n  FAIL_GET: \"Sorry, I can't get that.\",\r\n  FAIL_GET_OWNED: 'You already seem to have that.',\r\n  FAIL_DROP: \"Sorry, I can't drop that.\",\r\n  FAIL_DROP_OWNED: \"You don't seem to have that.\",\r\n  OK_GET: 'Taken.',\r\n  OK_DROP: 'Dropped.'\r\n};\r\n","import { arrayToObject } from './utils';\r\n\r\nconst defaultSelectors = {\r\n  inputForm: '.game-input',\r\n  inputField: '.game-typed-input',\r\n  output: '.game-output'\r\n};\r\n\r\nconst CSS_CLASS_HIDE_FORM = 'hidden';\r\n\r\nconst UI = (selectors = {}) => {\r\n  const sels = {\r\n    ...defaultSelectors,\r\n    ...selectors\r\n  };\r\n\r\n  // Cache references to DOM elements for the game UI\r\n  const els = arrayToObject(\r\n    Object.keys(sels),\r\n    (obj, k) => {\r\n      const s = sels[k];\r\n      const el = document.querySelector(s);\r\n      if (!el) throw new Error(`No DOM element found for selector: ${s}`);\r\n      return el;\r\n    }\r\n  );\r\n\r\n  const getInput = () => els.inputField.value.trim();\r\n\r\n  const onSubmit = (cb) => {\r\n    els.inputForm.addEventListener('submit', (e) => {\r\n      e.preventDefault();\r\n\r\n      cb(getInput());\r\n    });\r\n  };\r\n\r\n  const clearInput = () => {\r\n    els.inputField.value = '';\r\n  };\r\n\r\n  const clearOutput = () => {\r\n    els.output.innerHTML = '';\r\n  };\r\n\r\n  const hideInput = () => {\r\n    els.inputForm.classList.add(CSS_CLASS_HIDE_FORM);\r\n  };\r\n\r\n  const showInput = () => {\r\n    els.inputForm.classList.remove(CSS_CLASS_HIDE_FORM);\r\n  };\r\n\r\n  const writeOutput = (outputText, cssClass) => {\r\n    const pEl = document.createElement('p');\r\n    pEl.innerHTML = outputText;\r\n    if (cssClass) pEl.classList.add(cssClass);\r\n    els.output.appendChild(pEl);\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    window.scrollTo(0, document.body.scrollHeight);\r\n  };\r\n\r\n  return {\r\n    els,\r\n    onSubmit,\r\n    getInput,\r\n    clearInput,\r\n    hideInput,\r\n    showInput,\r\n    clearOutput,\r\n    writeOutput,\r\n    scrollToBottom\r\n  };\r\n};\r\n\r\nexport default UI;\r\n","export default Object.freeze({\r\n  SILENT: 'silent',\r\n  INVISIBLE: 'invisible',\r\n  FIXED: 'fixed',\r\n  QUIET: 'quiet',\r\n  SCENERY: 'scenery'\r\n});\r\n","import TAGS from './tags';\r\n\r\nexport const getVisibleEntities = (loc, entities) => [...loc.things]\r\n  .map((h) => entities[h])\r\n  .filter(\r\n    (i) => !i.tags.has(TAGS.INVISIBLE)\r\n      && !i.tags.has(TAGS.SCENERY)\r\n      && !i.tags.has(TAGS.SILENT)\r\n  );\r\n\r\nexport const getEntitiesWithInitial = (ents) => ents.filter(\r\n  (i) => i.meta.isInitialState && i.initial\r\n);\r\n\r\nexport const getListableInventory = (entities, API) => [...API.inventory]\r\n  .map((i) => entities[i])\r\n  .filter(\r\n    (i) => !i.tags.has(TAGS.INVISIBLE) && !i.tags.has(TAGS.SILENT)\r\n  );\r\n\r\nexport const getSummaryListText = (ents, API) => ents.map((i) => API.dyntext(i.summary)).join(', ');\r\n\r\nexport const isSubjectGettable = (subject) => (\r\n  subject\r\n    && !subject.tags.has(TAGS.SCENERY)\r\n    && !subject.tags.has(TAGS.FIXED)\r\n);\r\n","/* eslint-disable no-param-reassign */\nimport setupCommands from './commands';\nimport setupEntities from './entities';\nimport MESSAGES from './messages';\nimport uiHelper from './ui';\nimport queueHelper from './queue';\nimport {\n  getVisibleEntities,\n  getEntitiesWithInitial,\n  getSummaryListText\n} from './helpers';\nimport { arrayExclude } from './utils';\nimport TAGS from './tags';\nimport parse from './parse';\n\nconst start = (config) => {\n  const {\n    commands, aliases, baseCommandMap\n  } = setupCommands(config);\n  const { entities, startLocationId, getSubject } = setupEntities(config);\n\n  const gameMessages = { ...MESSAGES };\n\n  const gameState = {\n    turnCount: 0,\n    isActive: true,\n    currentLocationId: startLocationId,\n    inventory: new Set(config.startInventory || []),\n    lastSubject: null\n  };\n\n  const UI = uiHelper();\n  const Queue = queueHelper({ UI, gameState });\n\n  let afterCommandCallback;\n  let shouldUpdateTurn;\n\n  const API = {\n    ALIASES: aliases,\n\n    COMMANDS: commands,\n\n    clear() {\n      UI.clearOutput();\n    },\n\n    doTurn() {\n      gameState.turnCount += 1;\n    },\n\n    dyntext(text) {\n      return (typeof text === 'function' ? text(API) : text);\n    },\n\n    end() {\n      gameState.isActive = false;\n      UI.hideInput();\n    },\n\n    entity(id) {\n      if (!entities[id]) {\n        throw new Error(`Game logic error: no entity '${id}' found`);\n      }\n      return entities[id];\n    },\n\n    goTo(locationId, skipTurn = false) {\n      const destination = API.entity(locationId);\n\n      let onGoToResult = true;\n\n      if (typeof config.onGoTo === 'function') {\n        onGoToResult = config.onGoTo({\n          game: API, destination\n        });\n      }\n\n      // FIXME: turn tracking may not be intuitive here\n\n      if (onGoToResult === false || !gameState.isActive) return;\n\n      if (typeof destination.onGoTo === 'function') {\n        onGoToResult = destination.onGoTo({\n          game: API\n        });\n      }\n\n      if (onGoToResult === false || !gameState.isActive) return;\n\n      gameState.currentLocationId = locationId;\n      API.location.meta.visitCount += 1;\n      API.look();\n\n      if (!skipTurn) API.doTurn();\n\n      if (typeof onGoToResult === 'function') {\n        onGoToResult();\n      }\n    },\n\n    get inventory() {\n      return gameState.inventory;\n    },\n\n    get location() {\n      return entities[gameState.currentLocationId];\n    },\n\n    look(forceFullDescription = false) {\n      const loc = API.location;\n      const isFullLook = forceFullDescription || loc.meta.visitCount === 1;\n\n      let onLookResult = true;\n\n      const lookCallbacks = [config.onLook, loc.onLook];\n\n      for (let i = 0; i < 2; i++) {\n        const fn = lookCallbacks[i];\n        if (typeof fn === 'function') {\n          onLookResult = fn({\n            game: API,\n            isFullLook\n          });\n\n          if (onLookResult === false || !gameState.isActive) return;\n        }\n      }\n\n      API.print(isFullLook ? loc.description : loc.summary);\n\n      if (loc.things.size === 0) {\n        if (typeof onLookResult === 'function') {\n          onLookResult();\n        }\n        return;\n      }\n\n      let visibleEnts = getVisibleEntities(loc, entities);\n\n      if (isFullLook) {\n        // Print any 'initial' entries for\n        // unmolested items on full LOOK\n        const entsWithInitial = getEntitiesWithInitial(visibleEnts);\n\n        if (entsWithInitial.length > 0) {\n          entsWithInitial.forEach((i) => {\n            API.print(i.initial);\n          });\n\n          visibleEnts = arrayExclude(visibleEnts, entsWithInitial);\n        }\n      }\n\n      if (visibleEnts.length === 0) {\n        if (typeof onLookResult === 'function') {\n          onLookResult();\n        }\n        return;\n      }\n\n      const listText = `${\n        gameMessages.LOCATION_ITEMS_PREFIX\n      }${getSummaryListText(visibleEnts, API)}.`;\n\n      API.print(listText);\n\n      if (typeof onLookResult === 'function') {\n        onLookResult();\n      }\n    },\n\n    MESSAGES: gameMessages,\n\n    noTurn() {\n      shouldUpdateTurn = false;\n    },\n\n    pause(pauseTime = 0) {\n      // TODO: add indefinite pause + 'continue' option\n      UI.hideInput();\n      Queue.add({ pauseTime });\n    },\n\n    print(outputText, cssClass) {\n      if (!outputText) return;\n\n      if (outputText instanceof Array) {\n        outputText.forEach((ot) => API.print(ot, cssClass));\n        return;\n      }\n\n      Queue.add({ outputText: API.dyntext(outputText), cssClass });\n    },\n\n    get state() {\n      return gameState;\n    },\n\n    TAGS\n  };\n\n  // Setup input-parse-output loop\n  UI.onSubmit((inputText) => {\n    if (!inputText) return;\n    if (!gameState.isActive) return;\n\n    afterCommandCallback = null;\n    shouldUpdateTurn = true;\n\n    API.print(inputText, 'input');\n    UI.clearInput();\n\n    const afterCommand = (cb) => {\n      afterCommandCallback = cb;\n    };\n\n    parse({\n      inputText,\n      API,\n      baseCommandMap,\n      entities,\n      commands,\n      gameState,\n      getSubject,\n      config,\n      gameMessages,\n      afterCommand\n    });\n\n    if (!gameState.isActive) return;\n\n    if (typeof afterCommandCallback === 'function') {\n      afterCommandCallback();\n      afterCommandCallback = null;\n    }\n\n    if (!gameState.isActive) return;\n\n    if (!shouldUpdateTurn) return;\n\n    API.doTurn();\n\n    if (typeof config.onTurn === 'function') {\n      config.onTurn({ game: API, turnCount: gameState.turnCount });\n    }\n  });\n\n  // Start the game\n  UI.clearOutput();\n  API.goTo(gameState.currentLocationId, true);\n};\n\nexport default {\n  start\n};\n","/* eslint-disable no-param-reassign */\r\nimport nlp from 'compromise';\r\nimport { arrayToObject } from './utils';\r\n\r\nconst setupEntities = (config) => {\r\n  const baseNounMap = {};\r\n  let startLocationId;\r\n\r\n  // Iterate the defined game entities and set up\r\n  // metadata, self-reference functions, and lists\r\n  // for tags/things etc\r\n  // TODO: validate and seal these objects\r\n  const entities = config.entities.reduce((obj, ent, idx) => {\r\n    const entObj = ent(() => entities[entObj.id]);\r\n\r\n    if (!entObj.id) {\r\n      console.error(entObj);\r\n      throw new Error('Missing entity id');\r\n    }\r\n\r\n    // Decorate the entity with metadata & author utils\r\n    entObj.is = (id) => entObj.id === id;\r\n    entObj.exists = true;\r\n    entObj.meta = {\r\n      visitCount: 0,\r\n      isInitialState: true,\r\n      isExamined: false\r\n    };\r\n\r\n    if (!entObj.data) entObj.data = {};\r\n    if (!entObj.things) entObj.things = [];\r\n    if (!entObj.tags) entObj.tags = [];\r\n    // 'things' and 'tags' are converted to Sets\r\n    // to ensure uniqueness and provide a built-in API\r\n    // for authors (add, delete, has etc)\r\n    entObj.things = new Set(entObj.things);\r\n    entObj.tags = new Set(entObj.tags);\r\n\r\n    // Validate entity nouns and add them to our global list\r\n    if (entObj.nouns) {\r\n      entObj.nouns.forEach((noun) => {\r\n        if (noun in baseNounMap) {\r\n          throw new Error(`Duplicate noun '${noun}' found for entity '${entObj.id}'`);\r\n        }\r\n\r\n        baseNounMap[noun] = entObj.id;\r\n      });\r\n    }\r\n\r\n    obj[entObj.id] = entObj;\r\n\r\n    // Use the first-defined entity as the start location\r\n    // if the config hasn't explicitly defined one\r\n    if (idx === 0) {\r\n      startLocationId = config.startLocationId || entObj.id;\r\n    }\r\n\r\n    return obj;\r\n  }, {});\r\n\r\n  // Tell nlp about our new nouns\r\n  nlp.extend((_Doc, world) => {\r\n    const extraNouns = arrayToObject(\r\n      Object.keys(baseNounMap),\r\n      () => 'Noun'\r\n    );\r\n    world.addWords(extraNouns);\r\n  });\r\n\r\n  // Returns the first entity containing the given noun, that is also\r\n  // in one of the fromLists, and passes the filterFn.\r\n  // Used by commands to determine target of 'get', 'examine' etc\r\n  const getSubject = (noun, fromLists, filterFn = () => true) => {\r\n    if (!(noun in baseNounMap)) return false;\r\n    if (!(fromLists instanceof Array)) fromLists = [fromLists];\r\n\r\n    const nounSubject = entities[baseNounMap[noun]];\r\n\r\n    let validSubject = false;\r\n    fromLists.forEach((list) => {\r\n      if (list.has(nounSubject.id) && filterFn(nounSubject)) {\r\n        validSubject = nounSubject;\r\n      }\r\n    });\r\n\r\n    return validSubject;\r\n  };\r\n\r\n  return {\r\n    entities,\r\n    baseNounMap,\r\n    startLocationId,\r\n    getSubject\r\n  };\r\n};\r\n\r\nexport default setupEntities;\r\n","// Basic queue setup for handling game output.\r\n// add() pushes items onto the queue.\r\n//\r\n// If the item is for printing text,\r\n// it will be immediately flushed and printed.\r\n// { outputText cssClass }\r\n//\r\n// If the item is for pausing the game,\r\n// it will prevent any further output until\r\n// the time has passed.\r\n// { pauseTime }\r\nconst queueHelper = ({ UI, gameState }) => {\r\n  const outputQueue = [];\r\n  let isFlushing = false;\r\n\r\n  const flushOutputQueue = () => {\r\n    if (isFlushing) return;\r\n\r\n    if (outputQueue.length === 0) {\r\n      isFlushing = false;\r\n      if (gameState.isActive) UI.showInput();\r\n      return;\r\n    }\r\n\r\n    isFlushing = true;\r\n\r\n    const output = outputQueue.shift();\r\n\r\n    if ('pauseTime' in output) {\r\n      setTimeout(() => {\r\n        isFlushing = false;\r\n        flushOutputQueue();\r\n      }, output.pauseTime);\r\n\r\n      return;\r\n    }\r\n\r\n    const { outputText, cssClass } = output;\r\n\r\n    UI.writeOutput(outputText, cssClass);\r\n    UI.scrollToBottom();\r\n\r\n    isFlushing = false;\r\n\r\n    flushOutputQueue();\r\n  };\r\n\r\n  const add = (output) => {\r\n    outputQueue.push(output);\r\n    flushOutputQueue();\r\n  };\r\n\r\n  return {\r\n    add\r\n  };\r\n};\r\n\r\nexport default queueHelper;\r\n","/* eslint-disable no-param-reassign */\nimport nlp from 'compromise';\nimport { isSubjectGettable, getListableInventory, getSummaryListText } from './helpers';\nimport TAGS from './tags';\nimport { arrayToObject } from './utils';\n\nconst parse = ({\n  inputText,\n  API,\n  baseCommandMap,\n  entities,\n  commands,\n  gameState,\n  getSubject,\n  config,\n  gameMessages,\n  afterCommand\n}) => {\n  // Get verbs and nouns from input\n  const parsed = nlp(inputText.toLowerCase());\n\n  const verb = parsed.verbs().out('array')[0];\n  const noun = parsed.nouns().out('array')[0];\n\n  // Get base command\n  if (!(verb in baseCommandMap)) {\n    API.print(gameMessages.FAIL_UNKNOWN);\n    API.noTurn();\n    return;\n  }\n  const baseCommand = baseCommandMap[verb];\n\n  // Get subject\n  const subject = getSubject(\n    noun,\n    [API.location.things, API.inventory],\n    (i) => !i.tags.has(TAGS.INVISIBLE)\n  );\n\n  // Handle custom commands first\n  if (typeof config.onCommand === 'function') {\n    let onCommandResult = true;\n\n    const command = arrayToObject(\n      Object.keys(commands),\n      (_obj, k) => baseCommand === k\n    );\n    command._base = baseCommand;\n\n    // Pass authoring tools to custom command callback\n    onCommandResult = config.onCommand({\n      command,\n      subject: subject || { is: () => false, exists: false },\n      game: API,\n      noTurn: API.noTurn\n    });\n\n    if (onCommandResult === false || !gameState.isActive) return;\n\n    if (typeof onCommandResult === 'function') {\n      afterCommand(onCommandResult);\n    }\n  }\n\n  // Handle location connections\n  if (API.location.to && baseCommand in API.location.to) {\n    API.goTo(API.location.to[baseCommand]);\n    return;\n  }\n\n  // Built-in command handling\n  switch (baseCommand) {\n    case commands.n:\n    case commands.s:\n    case commands.e:\n    case commands.w:\n    case commands.up:\n    case commands.down:\n    case commands.in:\n    case commands.out: {\n      // Fall-through if earlier logic fails\n      API.print(gameMessages.FAIL_NO_EXIT);\n      return;\n    }\n\n    case commands.look: {\n      API.look(true);\n      API.noTurn();\n      return;\n    }\n\n    case commands.examine: {\n      if (!subject) {\n        API.print(gameMessages.FAIL_EXAMINE);\n        API.noTurn();\n        return;\n      }\n\n      API.print(subject.description);\n      subject.meta.isExamined = true;\n      return;\n    }\n\n    case commands.get: {\n      if (!isSubjectGettable(subject)) {\n        API.print(gameMessages.FAIL_GET);\n        API.noTurn();\n        return;\n      }\n\n      if (API.inventory.has(subject.id)) {\n        API.print(gameMessages.FAIL_GET_OWNED);\n        API.noTurn();\n        return;\n      }\n\n      API.location.things.delete(subject.id);\n      API.inventory.add(subject.id);\n      subject.meta.isInitialState = false;\n\n      API.print(gameMessages.OK_GET);\n      return;\n    }\n\n    case commands.drop: {\n      if (!subject || !API.inventory.has(subject.id)) {\n        API.print(gameMessages.FAIL_DROP_OWNED);\n        API.noTurn();\n        return;\n      }\n\n      if (subject.tags.has(TAGS.FIXED)) {\n        API.print(gameMessages.FAIL_DROP);\n        API.noTurn();\n        return;\n      }\n\n      API.inventory.delete(subject.id);\n      API.location.things.add(subject.id);\n      subject.meta.isInitialState = false;\n\n      API.print(gameMessages.OK_DROP);\n      return;\n    }\n\n    case commands.inventory: {\n      if (API.inventory.size === 0) {\n        API.print(gameMessages.INV_NONE);\n        API.noTurn();\n        return;\n      }\n\n      const invItems = getListableInventory(entities, API);\n      const invText = getSummaryListText(invItems, API);\n\n      API.print(`${gameMessages.INV_PREFIX}${invText}.`);\n      API.noTurn();\n      return;\n    }\n\n    case commands.help: {\n      API.print(\n        `Basic commands: ${Object.values(commands).join(\n          ', '\n        )}. Try other words too!`,\n        'info'\n      );\n      API.noTurn();\n      return;\n    }\n\n    default: {\n      API.print(gameMessages.FAIL_UNHANDLED);\n      API.noTurn();\n    }\n  }\n};\n\nexport default parse;\n"],"names":["arrayToObject","arr","assignmentCallback","reduce","obj","k","COMMANDS","n","e","w","s","up","down","in","out","look","examine","get","drop","inventory","help","ALIASES","LOCATION_ITEMS_PREFIX","INV_PREFIX","INV_NONE","FAIL_UNKNOWN","FAIL_UNHANDLED","FAIL_NO_EXIT","FAIL_EXAMINE","FAIL_GET","FAIL_GET_OWNED","FAIL_DROP","FAIL_DROP_OWNED","OK_GET","OK_DROP","defaultSelectors","inputForm","inputField","output","Object","freeze","SILENT","INVISIBLE","FIXED","QUIET","SCENERY","getSummaryListText","ents","API","map","i","dyntext","summary","join","start","config","commands","aliases","baseCommandMap","entries","forEach","cmd","aliasList","keys","alias","nlp","extend","_Doc","world","ext","addWords","setupCommands","entities","startLocationId","getSubject","baseNounMap","ent","idx","entObj","id","console","error","Error","is","exists","meta","visitCount","isInitialState","isExamined","data","things","tags","Set","nouns","noun","extraNouns","fromLists","filterFn","Array","nounSubject","validSubject","list","has","setupEntities","gameMessages","MESSAGES","gameState","turnCount","isActive","currentLocationId","startInventory","lastSubject","UI","selectors","sels","els","el","document","querySelector","getInput","value","trim","onSubmit","cb","addEventListener","preventDefault","clearInput","hideInput","classList","add","showInput","remove","clearOutput","innerHTML","writeOutput","outputText","cssClass","pEl","createElement","appendChild","scrollToBottom","window","scrollTo","body","scrollHeight","uiHelper","Queue","outputQueue","isFlushing","flushOutputQueue","length","shift","setTimeout","pauseTime","push","queueHelper","afterCommandCallback","shouldUpdateTurn","clear","doTurn","text","end","entity","goTo","locationId","skipTurn","destination","onGoToResult","onGoTo","game","location","forceFullDescription","loc","isFullLook","onLookResult","lookCallbacks","onLook","fn","print","description","size","visibleEnts","h","filter","TAGS","getVisibleEntities","entsWithInitial","initial","exclArray","includes","listText","noTurn","pause","ot","state","inputText","afterCommand","parsed","toLowerCase","verb","verbs","baseCommand","subject","onCommand","onCommandResult","command","_obj","_base","to","isSubjectGettable","delete","invItems","getListableInventory","invText","values","parse","onTurn"],"mappings":"gPAcaA,EAAgB,CAACC,EAAKC,IAAuBD,EAAIE,OAAO,CAACC,EAAKC,KACzED,EAAIC,GAAKH,EAAmBE,EAAKC,GAC1BD,GACN,ICbGE,EAAW,CACfC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,GAAI,KACJC,KAAM,OACNC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,QAAS,UACTC,IAAK,MACLC,KAAM,OACNC,UAAW,YACXC,KAAM,QAGKC,EAAU,CACrB,CAACf,EAASC,GAAI,CAAC,QAAS,YACxB,CAACD,EAASE,GAAI,CAAC,OAAQ,WACvB,CAACF,EAASG,GAAI,CAAC,OAAQ,WACvB,CAACH,EAASI,GAAI,CAAC,QAAS,YACxB,CAACJ,EAASK,IAAK,CAAC,IAAK,QAAS,UAC9B,CAACL,EAASM,MAAO,CAAC,IAAK,UAAW,WAClC,CAACN,EAASO,IAAK,CAAC,QAAS,QAAS,UAClC,CAACP,EAASQ,KAAM,CAAC,QAAS,SAAU,UAAW,QAC/C,CAACR,EAASS,MAAO,CAAC,cAAe,QAAS,aAAc,YACxD,CAACT,EAASU,SAAU,CAAC,UAAW,UAAW,IAAK,KAAM,SAAU,SAChE,CAACV,EAASW,KAAM,CAAC,IAAK,OAAQ,UAAW,SAAU,UAAW,QAC9D,CAACX,EAASY,MAAO,CAAC,WAAY,OAAQ,SAAU,WAChD,CAACZ,EAASa,WAAY,CACpB,MACA,WACA,YACA,QACA,QAEF,CAACb,EAASc,MAAO,CACf,eACA,QACA,cACA,IACA,WACA,QACA,QACA,aCjDJ,MAAe,CACbE,sBAAuB,eACvBC,WAAY,oBACZC,SAAU,4BACVC,aAAc,6BACdC,eAAgB,0BAChBC,aAAc,yBACdC,aAAc,2BACdC,SAAU,2BACVC,eAAgB,iCAChBC,UAAW,4BACXC,gBAAiB,+BACjBC,OAAQ,SACRC,QAAS,YCXX,MAAMC,EAAmB,CACvBC,UAAW,cACXC,WAAY,oBACZC,OAAQ,gBCLV,MAAeC,OAAOC,OAAO,CAC3BC,OAAQ,SACRC,UAAW,YACXC,MAAO,QACPC,MAAO,QACPC,QAAS,kBCeEC,EAAqB,CAACC,EAAMC,IAAQD,EAAKE,IAAKC,GAAMF,EAAIG,QAAQD,EAAEE,UAAUC,KAAK,MCwO9F,MAAe,CACbC,MA9OaC,IACb,MAAMC,SACJA,EADIC,QACMA,EADNC,eACeA,GLoCAH,CAAAA,IACrB,MAAMC,OAAgBlD,GAChBmD,OAAepC,GAGjBkC,EAAOC,UACTjB,OAAOoB,QAAQJ,EAAOC,UAAUI,QAAQ,EAAEC,EAAKC,MAC7CN,EAASK,GAAOA,EAChBJ,EAAQI,GAAOC,IAOnB,MAAMJ,EAAiB1D,EACrBuC,OAAOwB,KAAKN,GACZ,CAACrD,EAAKC,KACJoD,EAAQpD,GAAGuD,QAASI,IAAY5D,EAAI4D,GAAS3D,IACtCA,IAiBX,OAZA4D,EAAIC,OAAO,CAACC,EAAMC,KAKhB,MAAMC,EAAMrE,EACVuC,OAAOwB,KAAKL,GACZ,IAAM,QAERU,EAAME,SAASD,KAGV,CACLb,SAAAA,EAAUC,QAAAA,EAASC,eAAAA,EAAgBO,IAAAA,IKxEjCM,CAAchB,IACZiB,SAAEA,EAAFC,gBAAYA,EAAZC,WAA6BA,GCfdnB,CAAAA,IACrB,MAAMoB,EAAc,GACpB,IAAIF,EAMJ,MAAMD,EAAWjB,EAAOiB,SAASrE,OAAO,CAACC,EAAKwE,EAAKC,KACjD,MAAMC,EAASF,EAAI,IAAMJ,EAASM,EAAOC,KAEzC,IAAKD,EAAOC,GAEV,MADAC,QAAQC,MAAMH,OACJI,MAAM,qBAwClB,OApCAJ,EAAOK,GAAMJ,GAAOD,EAAOC,KAAOA,EAClCD,EAAOM,QAAS,EAChBN,EAAOO,KAAO,CACZC,WAAY,EACZC,gBAAgB,EAChBC,YAAY,GAGTV,EAAOW,OAAMX,EAAOW,KAAO,IAC3BX,EAAOY,SAAQZ,EAAOY,OAAS,IAC/BZ,EAAOa,OAAMb,EAAOa,KAAO,IAIhCb,EAAOY,OAAS,IAAIE,IAAId,EAAOY,QAC/BZ,EAAOa,KAAO,IAAIC,IAAId,EAAOa,MAGzBb,EAAOe,OACTf,EAAOe,MAAMjC,QAASkC,IACpB,GAAIA,KAAQnB,EACV,UAAUO,MAAO,mBAAkBY,wBAA2BhB,EAAOC,OAGvEJ,EAAYmB,GAAQhB,EAAOC,KAI/B3E,EAAI0E,EAAOC,IAAMD,EAIL,IAARD,IACFJ,EAAkBlB,EAAOkB,iBAAmBK,EAAOC,IAG9C3E,GACN,IA8BH,OA3BA6D,EAAIC,OAAO,CAACC,EAAMC,KAChB,MAAM2B,EAAa/F,EACjBuC,OAAOwB,KAAKY,GACZ,IAAM,QAERP,EAAME,SAASyB,KAsBV,CACLvB,SAAAA,EACAG,YAAAA,EACAF,gBAAAA,EACAC,WApBiB,CAACoB,EAAME,EAAWC,EAAW,MAAM,MACpD,KAAMH,KAAQnB,GAAc,SACtBqB,aAAqBE,QAAQF,EAAY,CAACA,IAEhD,MAAMG,EAAc3B,EAASG,EAAYmB,IAEzC,IAAIM,GAAe,EAOnB,OANAJ,EAAUpC,QAASyC,IACbA,EAAKC,IAAIH,EAAYpB,KAAOkB,EAASE,KACvCC,EAAeD,KAIZC,KDlEyCG,CAAchD,GAE1DiD,OAAoBC,GAEpBC,EAAY,CAChBC,UAAW,EACXC,UAAU,EACVC,kBAAmBpC,EACnBtD,UAAW,IAAIyE,IAAIrC,EAAOuD,gBAAkB,IAC5CC,YAAa,MAGTC,EHrBG,EAACC,EAAY,MACtB,MAAMC,OACD/E,EACA8E,GAICE,EAAMnH,EACVuC,OAAOwB,KAAKmD,GACZ,CAAC9G,EAAKC,KACJ,MAAMK,EAAIwG,EAAK7G,GACT+G,EAAKC,SAASC,cAAc5G,GAClC,IAAK0G,EAAI,UAAUlC,MAAO,sCAAqCxE,KAC/D,OAAO0G,IAILG,EAAW,IAAMJ,EAAI9E,WAAWmF,MAAMC,OAqC5C,MAAO,CACLN,IAAAA,EACAO,SArCgBC,IAChBR,EAAI/E,UAAUwF,iBAAiB,SAAWpH,IACxCA,EAAEqH,iBAEFF,EAAGJ,QAkCLA,SAAAA,EACAO,WA/BiB,KACjBX,EAAI9E,WAAWmF,MAAQ,IA+BvBO,UAxBgB,KAChBZ,EAAI/E,UAAU4F,UAAUC,IAtCA,WA8DxBC,UArBgB,KAChBf,EAAI/E,UAAU4F,UAAUG,OA1CA,WA+DxBC,YA9BkB,KAClBjB,EAAI7E,OAAO+F,UAAY,IA8BvBC,YAnBkB,CAACC,EAAYC,KAC/B,MAAMC,EAAMpB,SAASqB,cAAc,KACnCD,EAAIJ,UAAYE,EACZC,GAAUC,EAAIT,UAAUC,IAAIO,GAChCrB,EAAI7E,OAAOqG,YAAYF,IAgBvBG,eAbqB,KACrBC,OAAOC,SAAS,EAAGzB,SAAS0B,KAAKC,iBG9BxBC,GACLC,EErBY,GAAGlC,GAAAA,EAAIN,UAAAA,MACzB,MAAMyC,EAAc,GACpB,IAAIC,GAAa,EAEjB,MAAMC,EAAmB,KACvB,GAAID,EAAY,OAEhB,GAA2B,IAAvBD,EAAYG,OAGd,OAFAF,GAAa,OACT1C,EAAUE,UAAUI,EAAGkB,aAI7BkB,GAAa,EAEb,MAAM9G,EAAS6G,EAAYI,QAE3B,GAAI,cAAejH,EAMjB,YALAkH,WAAW,KACTJ,GAAa,EACbC,KACC/G,EAAOmH,WAKZ,MAAMlB,WAAEA,EAAFC,SAAcA,GAAalG,EAEjC0E,EAAGsB,YAAYC,EAAYC,GAC3BxB,EAAG4B,iBAEHQ,GAAa,EAEbC,KAQF,MAAO,CACLpB,IANW3F,IACX6G,EAAYO,KAAKpH,GACjB+G,OFjBYM,CAAY,IAAE3C,EAAIN,UAAAA,IAEhC,IAAIkD,EACAC,EAEJ,MAAM7G,EAAM,CACV3B,QAASoC,EAETnD,SAAUkD,EAEVsG,QACE9C,EAAGoB,eAGL2B,SACErD,EAAUC,WAAa,GAGzBxD,QAAQ6G,GACkB,mBAATA,EAAsBA,EAAKhH,GAAOgH,EAGnDC,MACEvD,EAAUE,UAAW,EACrBI,EAAGe,aAGLmC,OAAOnF,GACL,IAAKP,EAASO,GACZ,UAAUG,MAAO,gCAA+BH,YAElD,OAAOP,EAASO,IAGlBoF,KAAKC,EAAYC,GAAW,GAC1B,MAAMC,EAActH,EAAIkH,OAAOE,GAE/B,IAAIG,GAAe,EAEU,mBAAlBhH,EAAOiH,SAChBD,EAAehH,EAAOiH,OAAO,CAC3BC,KAAMzH,EAAKsH,YAAAA,MAMM,IAAjBC,GAA2B7D,EAAUE,WAEP,mBAAvB0D,EAAYE,SACrBD,EAAeD,EAAYE,OAAO,CAChCC,KAAMzH,MAIW,IAAjBuH,GAA2B7D,EAAUE,WAEzCF,EAAUG,kBAAoBuD,EAC9BpH,EAAI0H,SAASrF,KAAKC,YAAc,EAChCtC,EAAIjC,OAECsJ,GAAUrH,EAAI+G,SAES,mBAAjBQ,GACTA,OAIApJ,gBACF,OAAOuF,EAAUvF,WAGfuJ,eACF,OAAOlG,EAASkC,EAAUG,oBAG5B9F,KAAK4J,GAAuB,GAC1B,MAAMC,EAAM5H,EAAI0H,SACVG,EAAaF,GAAgD,IAAxBC,EAAIvF,KAAKC,WAEpD,IAAIwF,GAAe,EAEnB,MAAMC,EAAgB,CAACxH,EAAOyH,OAAQJ,EAAII,QAE1C,IAAK,IAAI9H,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAM+H,EAAKF,EAAc7H,GACzB,GAAkB,mBAAP+H,IACTH,EAAeG,EAAG,CAChBR,KAAMzH,EACN6H,WAAAA,KAGmB,IAAjBC,IAA2BpE,EAAUE,UAAU,OAMvD,GAFA5D,EAAIkI,MAAML,EAAaD,EAAIO,YAAcP,EAAIxH,SAErB,IAApBwH,EAAIlF,OAAO0F,KAIb,YAH4B,mBAAjBN,GACTA,KAKJ,IAAIO,EDvIwB,EAACT,EAAKpG,IAAa,IAAIoG,EAAIlF,QAC1DzC,IAAKqI,GAAM9G,EAAS8G,IACpBC,OACErI,IAAOA,EAAEyC,KAAKW,IAAIkF,EAAK9I,aAClBQ,EAAEyC,KAAKW,IAAIkF,EAAK3I,WAChBK,EAAEyC,KAAKW,IAAIkF,EAAK/I,SCkIFgJ,CAAmBb,EAAKpG,GAE1C,GAAIqG,EAAY,CAGd,MAAMa,EAAyCL,EDpIFE,OAClDrI,GAAMA,EAAEmC,KAAKE,gBAAkBrC,EAAEyI,SCqIxBD,EAAgBpC,OAAS,IAC3BoC,EAAgB9H,QAASV,IACvBF,EAAIkI,MAAMhI,EAAEyI,WN9IUC,EMiJgBF,EAAxCL,EAA2BA,ENjJeE,OAAQrI,IAAO0I,EAAUC,SAAS3I,KAA1D,IAAM0I,EMqJ5B,GAA2B,IAAvBP,EAAY/B,OAId,YAH4B,mBAAjBwB,GACTA,KAKJ,MAAMgB,EAAY,GAChBtF,EAAalF,wBACZwB,EAAmBuI,EAAarI,MAEnCA,EAAIkI,MAAMY,GAEkB,mBAAjBhB,GACTA,KAIJrE,SAAUD,EAEVuF,SACElC,GAAmB,GAGrBmC,MAAMvC,EAAY,GAEhBzC,EAAGe,YACHmB,EAAMjB,IAAI,CAAEwB,UAAAA,KAGdyB,MAAM3C,EAAYC,GACXD,IAEDA,aAAsBrC,MACxBqC,EAAW3E,QAASqI,GAAOjJ,EAAIkI,MAAMe,EAAIzD,IAI3CU,EAAMjB,IAAI,CAAEM,WAAYvF,EAAIG,QAAQoF,GAAaC,SAAAA,MAG/C0D,YACF,OAAOxF,GAGT8E,KAAAA,GAIFxE,EAAGU,SAAUyE,IACNA,GACAzF,EAAUE,WAEfgD,EAAuB,KACvBC,GAAmB,EAEnB7G,EAAIkI,MAAMiB,EAAW,SACrBnF,EAAGc,aG5MO,GACZqE,UAAAA,EACAnJ,IAAAA,EACAU,eAAAA,EACAc,SAAAA,EACAhB,SAAAA,EACAkD,UAAAA,EACAhC,WAAAA,EACAnB,OAAAA,EACAiD,aAAAA,EACA4F,aAAAA,MAGA,MAAMC,EAASpI,EAAIkI,EAAUG,eAEvBC,EAAOF,EAAOG,QAAQ1L,IAAI,SAAS,GACnCgF,EAAOuG,EAAOxG,QAAQ/E,IAAI,SAAS,GAGzC,KAAMyL,KAAQ7I,GAGZ,OAFAV,EAAIkI,MAAM1E,EAAa/E,mBACvBuB,EAAI+I,SAGN,MAAMU,EAAc/I,EAAe6I,GAG7BG,EAAUhI,EACdoB,EACA,CAAC9C,EAAI0H,SAAShF,OAAQ1C,EAAI7B,WACzB+B,IAAOA,EAAEyC,KAAKW,IAAIkF,EAAK9I,YAI1B,GAAgC,mBAArBa,EAAOoJ,UAA0B,CAC1C,IAAIC,GAAkB,EAEtB,MAAMC,EAAU7M,EACduC,OAAOwB,KAAKP,GACZ,CAACsJ,EAAMzM,IAAMoM,IAAgBpM,GAY/B,GAVAwM,EAAQE,MAAQN,EAGhBG,EAAkBrJ,EAAOoJ,UAAU,CACjCE,QAAAA,EACAH,QAASA,GAAW,CAAEvH,GAAI,KAAM,EAAOC,QAAQ,GAC/CqF,KAAMzH,EACN+I,OAAQ/I,EAAI+I,UAGU,IAApBa,IAA8BlG,EAAUE,SAAU,OAEvB,mBAApBgG,GACTR,EAAaQ,GAKjB,GAAI5J,EAAI0H,SAASsC,IAAMP,KAAezJ,EAAI0H,SAASsC,GACjDhK,EAAImH,KAAKnH,EAAI0H,SAASsC,GAAGP,SAK3B,OAAQA,GACN,KAAKjJ,EAASjD,EACd,KAAKiD,EAAS9C,EACd,KAAK8C,EAAShD,EACd,KAAKgD,EAAS/C,EACd,KAAK+C,EAAS7C,GACd,KAAK6C,EAAS5C,KACd,KAAK4C,EAAS3C,GACd,KAAK2C,EAAS1C,IAGZ,YADAkC,EAAIkI,MAAM1E,EAAa7E,cAIzB,KAAK6B,EAASzC,KAGZ,OAFAiC,EAAIjC,MAAK,QACTiC,EAAI+I,SAIN,KAAKvI,EAASxC,QACZ,OAAK0L,GAML1J,EAAIkI,MAAMwB,EAAQvB,kBAClBuB,EAAQrH,KAAKG,YAAa,KANxBxC,EAAIkI,MAAM1E,EAAa5E,mBACvBoB,EAAI+I,UASR,KAAKvI,EAASvC,IACZ,MJlF4ByL,CAAAA,GAChCA,IACMA,EAAQ/G,KAAKW,IAAIkF,EAAK3I,WACtB6J,EAAQ/G,KAAKW,IAAIkF,EAAK7I,OI+EnBsK,CAAkBP,GAMnB1J,EAAI7B,UAAUmF,IAAIoG,EAAQ3H,KAC5B/B,EAAIkI,MAAM1E,EAAa1E,qBACvBkB,EAAI+I,WAIN/I,EAAI0H,SAAShF,OAAOwH,OAAOR,EAAQ3H,IACnC/B,EAAI7B,UAAU8G,IAAIyE,EAAQ3H,IAC1B2H,EAAQrH,KAAKE,gBAAiB,OAE9BvC,EAAIkI,MAAM1E,EAAavE,UAfrBe,EAAIkI,MAAM1E,EAAa3E,eACvBmB,EAAI+I,UAkBR,KAAKvI,EAAStC,KACZ,OAAKwL,GAAY1J,EAAI7B,UAAUmF,IAAIoG,EAAQ3H,IAMvC2H,EAAQ/G,KAAKW,IAAIkF,EAAK7I,QACxBK,EAAIkI,MAAM1E,EAAazE,gBACvBiB,EAAI+I,WAIN/I,EAAI7B,UAAU+L,OAAOR,EAAQ3H,IAC7B/B,EAAI0H,SAAShF,OAAOuC,IAAIyE,EAAQ3H,IAChC2H,EAAQrH,KAAKE,gBAAiB,OAE9BvC,EAAIkI,MAAM1E,EAAatE,WAfrBc,EAAIkI,MAAM1E,EAAaxE,sBACvBgB,EAAI+I,UAkBR,KAAKvI,EAASrC,UAAW,CACvB,GAA2B,IAAvB6B,EAAI7B,UAAUiK,KAGhB,OAFApI,EAAIkI,MAAM1E,EAAahF,eACvBwB,EAAI+I,SAIN,MAAMoB,EJ1IwB,EAAC3I,EAAUxB,IAAQ,IAAIA,EAAI7B,WAC5D8B,IAAKC,GAAMsB,EAAStB,IACpBqI,OACErI,IAAOA,EAAEyC,KAAKW,IAAIkF,EAAK9I,aAAeQ,EAAEyC,KAAKW,IAAIkF,EAAK/I,SIuIpC2K,CAAqB5I,EAAUxB,GAC1CqK,EAAUvK,EAAmBqK,EAAUnK,GAI7C,OAFAA,EAAIkI,MAAO,GAAE1E,EAAajF,aAAa8L,WACvCrK,EAAI+I,SAIN,KAAKvI,EAASpC,KAQZ,OAPA4B,EAAIkI,MACD,mBAAkB3I,OAAO+K,OAAO9J,GAAUH,KACzC,8BAEF,aAEFL,EAAI+I,SAIN,QACE/I,EAAIkI,MAAM1E,EAAa9E,gBACvBsB,EAAI+I,WH2CNwB,CAAM,CACJpB,UAAAA,EACAnJ,IAAAA,EACAU,eAAAA,EACAc,SAAAA,EACAhB,SAAAA,EACAkD,UAAAA,EACAhC,WAAAA,EACAnB,OAAAA,EACAiD,aAAAA,EACA4F,aAdoBzE,IACpBiC,EAAuBjC,KAgBpBjB,EAAUE,WAEqB,mBAAzBgD,IACTA,IACAA,EAAuB,MAGpBlD,EAAUE,UAEViD,IAEL7G,EAAI+G,SAEyB,mBAAlBxG,EAAOiK,QAChBjK,EAAOiK,OAAO,CAAE/C,KAAMzH,EAAK2D,UAAWD,EAAUC,iBAKpDK,EAAGoB,cACHpF,EAAImH,KAAKzD,EAAUG,mBAAmB"}